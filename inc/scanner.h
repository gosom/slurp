/*
 * Slurp - a web crawler
 * Copyright (C) 2011 Joseph Max DeLiso

 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, version 3 of the License.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef SCANNER_H
#define SCANNER_H

#include <vector>
#include <iostream>
#include <sstream>

#include <FlexLexer.h>

/*
  This file defines the wrapper class which acts
  as interfaces to the code generated by lex
 
  It depends on flex generating scanner classes, 
  which is a feature which may be removed in 
  a future release ( of flex ).

  This solution is still preferable to the 
  purely C reentrant scanners because there
  is no possibility of a shared scanner state
  at all.
*/

namespace slurp {
  class SlurpScanner : public yyFlexLexer {
      std::vector<std::string> results;
    public:
      SlurpScanner( std::istream* arg_yyin, std::ostream* arg_yyout ) 
         : yyFlexLexer( arg_yyin, arg_yyout ) 
      {
          /* stub */
      }
      int yylex(); 
      inline void addResult( std::string res ) {
         results.push_back(res);
      }
  };
}

#endif
